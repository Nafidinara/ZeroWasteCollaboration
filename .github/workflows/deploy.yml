name: CI/CD Pipeline

on:
  push:
    branches: [main]

jobs:
  running-test:
    name: Running Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.22"

      - name: Run Tests
        run: go test -v ./... -cover

  build-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: running-test
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_SECRET }}

      - name: Build Docker Image
        run: docker build -t nafidinara/redoocehub:1.0 .

      - name: Push Docker Image
        run: docker push nafidinara/redoocehub:1.0

  deploy-to-ec2:
    name: Deploy to AWS EC2
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ~/redoocehub
            docker-compose down
            touch .env && \
            echo ${{ secrets.APP_ENV }} > .env && \
            echo ${{ secrets.SERVER_ADDRESS }} >> .env && \
            echo ${{ secrets.PORT }} >> .env && \
            echo ${{ secrets.CONTEXT_TIMEOUT }} >> .env && \
            echo ${{ secrets.DB_HOST }} >> .env && \
            echo ${{ secrets.DB_PORT }} >> .env && \
            echo ${{ secrets.DB_USER }} >> .env && \
            echo ${{ secrets.DB_PASS }} >> .env && \
            echo ${{ secrets.DB_NAME }} >> .env && \
            echo ${{ secrets.ACCESS_TOKEN_EXPIRY_HOUR }} >> .env && \
            echo ${{ secrets.REFRESH_TOKEN_EXPIRY_HOUR }} >> .env && \
            echo ${{ secrets.ACCESS_TOKEN_SECRET }} >> .env && \
            echo ${{ secrets.REFRESH_TOKEN_SECRET }} >> .env && \
            echo ${{ secrets.CLOUDINARY_CLOUD_NAME }} >> .env && \
            echo ${{ secrets.CLOUDINARY_API_KEY }} >> .env && \
            echo ${{ secrets.CLOUDINARY_API_SECRET }} >> .env && \
            echo ${{ secrets.CLOUDINARY_UPLOAD_FOLDER }} >> .env
            docker-compose pull
            docker cp .env redoocehub:/
            docker-compose up -d
            echo "Deploy completed"